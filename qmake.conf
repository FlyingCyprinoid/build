#
# qmake configuration for building with arm-linux-gnueabi-g++
#

MAKEFILE_GENERATOR      = UNIX
CONFIG                 += incremental
QMAKE_INCREMENTAL_STYLE = sublib
QT_QPA_DEFAULT_PLATFORM = eglfs
QMAKE_CFLAGS_RELEASE += -O2 -march=armv7-a -mcpu=cortex-a9 
QMAKE_CXXFLAGS_RELEASE += -O2 -march=armv7-a -mcpu=cortex-a9 
EGLFS_PLATFORM_HOOKS_SOURCES = $$PWD/qeglfshooks_s5p4418.cpp
include(../common/linux.conf)
include(../common/gcc-base-unix.conf)
include(../common/g++-unix.conf)




# modifications to g++.conf
QMAKE_CC                = arm-cortexa9-linux-gnueabihf-gcc
QMAKE_CXX               = arm-cortexa9-linux-gnueabihf-g++
QMAKE_LINK              = arm-cortexa9-linux-gnueabihf-g++
QMAKE_LINK_SHLIB        = arm-cortexa9-linux-gnueabihf-g++

# modifications to linux.conf
QMAKE_AR                = arm-cortexa9-linux-gnueabihf-ar cqs
QMAKE_OBJCOPY           = arm-cortexa9-linux-gnueabihf-objcopy
QMAKE_NM                = arm-cortexa9-linux-gnueabihf-nm -P
QMAKE_STRIP             = arm-cortexa9-linux-gnueabihf-strip

QMAKE_INCDIR+=$$PWD/khronos
QMAKE_LIBDIR+=$$PWD/lib
#QMAKE_INCDIR_EGL=$$PWD/khronos
#QMAKE_LIBDIR_EGL=$$PWD/lib

#QMAKE_INCDIR_OPENGL_ES2=$$PWD/khronos/
#QMAKE_LIBDIR_OPENGL_ES2=$$PWD/lib

#QMAKE_INCDIR_OPENGL_ES1=$$PWD/khronos/
#QMAKE_LIBDIR_OPENGL_ES1=$$PWD/lib
#QMAKE_LIBS_EGL=-lEGL -lGLESv1_CM -lGLESv2 -lVR
#QMAKE_LIBS_OPENGL_ES1=-lEGL -lGLESv1_CM -lGLESv2 -lVR

#QMAKE_LIBS_OPENGL_ES2=-lEGL -lGLESv1_CM -lGLESv2 -lVR



load(qt_config)
